#!/bin/bash 

WORKING_DIR="./tmp-validator";
WGET_LOG_PATH="$WORKING_DIR/wget.log";
LEFT_ZIP_PATH="$WORKING_DIR/left.zip";
RIGHT_ZIP_PATH="$WORKING_DIR/right.zip";
LEFT_INFLATED_PATH="$WORKING_DIR/left-inflated";
RIGHT_INFLATED_PATH="$WORKING_DIR/right-inflated";
LEFT_SERIALIZED_PATH="$WORKING_DIR/left-serialized";
RIGHT_SERIALIZED_PATH="$WORKING_DIR/right-serialized";
LEFT_TREE_PATH="$WORKING_DIR/left-tree";
RIGHT_TREE_PATH="$WORKING_DIR/right-tree";

LEFT_ZIP=$1;
RIGHT_ZIP=$2;

function error {
	echo "[ERROR] $1";
	exit -1;
}

function fail {
	echo "[FAIL] $1";
	exit 1;
}

function pass {
	echo "[PASS]";
	exit 0;
}

if [ -z $LEFT_ZIP ] || [ -z $RIGHT_ZIP ]; then
	error "Two arguments are required: a path or URL to two .zip files.";
fi 

echo "Validating equality between left .zip [$LEFT_ZIP] and right .zip [$RIGHT_ZIP].";

if [ -d $WORKING_DIR ]; then 
	echo "Working directory [$WORKING_DIR] already exists, cleaning up.";
	rm -r $WORKING_DIR;
fi 

echo "Creating working directory [$WORKING_DIR].";
mkdir -p $WORKING_DIR;
if [ $? -ne 0 ]; then 
	error "Failed to create working directory.";
fi

if [[ $LEFT_ZIP == http* ]]; then
	echo "Left .zip is remote, downloading from [$LEFT_ZIP].";
	wget -o $WGET_LOG_PATH -O $LEFT_ZIP_PATH -- $LEFT_ZIP;
	if [ $? -ne 0 ]; then 
		cat $WGET_LOG_PATH;
		error "Failed to download left .zip from [$LEFT_ZIP].";
	fi

	rm $WGET_LOG_PATH;
else 
	if [ ! -e $LEFT_ZIP ]; then 
		error "Left .zip [$LEFT_ZIP] does not exist.";
	fi 

	LEFT_ZIP_PATH=$LEFT_ZIP;
fi

if [[ $RIGHT_ZIP == http* ]]; then 
	echo "Right .zip is remote, downloading from [$RIGHT_ZIP].";
	wget -o $WGET_LOG_PATH -O $RIGHT_ZIP_PATH -- $RIGHT_ZIP;
	if [ $? -ne 0 ]; then 
		cat $WGET_LOG_PATH;
		error "Failed to download right .zip from [$RIGHT_ZIP].";
	fi
else
	if [ ! -e $RIGHT_ZIP ]; then 
		error "Right .zip [$RIGHT_ZIP] does not exist.";
	fi 

	RIGHT_ZIP_PATH=$RIGHT_ZIP;
fi

echo "Inflating left .zip.";
unzip -q $LEFT_ZIP -d $LEFT_INFLATED_PATH;
if [ $? -ne 0 ]; then 
	error "Failed to inflate left .zip.";
fi 

echo "Inflating right .zip.";
unzip -q $RIGHT_ZIP_PATH -d $RIGHT_INFLATED_PATH;
if [ $? -ne 0 ]; then 
	error "Failed to inflate right .zip.";
fi 

echo "Comparing directory structures.";
tree $LEFT_INFLATED_PATH | tail -n +2 > $LEFT_TREE_PATH;
tree $RIGHT_INFLATED_PATH | tail -n +2 > $RIGHT_TREE_PATH;
if [ $(md5 -q $LEFT_TREE_PATH) != $(md5 -q $RIGHT_TREE_PATH) ]; then 
	diff -y --suppress-common-lines $LEFT_TREE_PATH $RIGHT_TREE_PATH;
	fail "Structures differ.";
else 
	echo "Directory structures are equivalent.";
fi 

echo "Generating list of files to serialize.";
LEFT_FILES=( $(find $LEFT_INFLATED_PATH) );
RIGHT_FILES=( $(find $RIGHT_INFLATED_PATH) );

echo "Serializing left files.";
for file in ${LEFT_FILES[@]}; do
	if [ ! -d $file ]; then 
		cat $file >> $LEFT_SERIALIZED_PATH;
	fi
done 

echo "Serializing right files.";
for file in ${RIGHT_FILES[@]}; do 
	if [ ! -d $file ]; then 
		cat $file >> $RIGHT_SERIALIZED_PATH;
	fi
done 

LEFT_DIGEST=$(md5 -q $LEFT_SERIALIZED_PATH);
RIGHT_DIGEST=$(md5 -q $RIGHT_SERIALIZED_PATH);
echo "[$LEFT_DIGEST] <- Left digest";
echo "[$RIGHT_DIGEST] <- Right digest";

if [ $LEFT_DIGEST == $RIGHT_DIGEST ]; then 
	echo "Cleaning up.";
	rm -r $WORKING_DIR;
	pass 
else
	fail "Digests differ.";
fi 

